Why we use Steam?
By using steam, we can write "Multiple line operation" in a "single line".
------------------------------------------------------
stream() : make an array --> comma separated one string/collection
filter(item->operation_on_item) : after making main collection, we can create another collection 
	from main collection by condition. filter method has two part, 1. item, 2. operation_on_item
	filter method return a new collection base on condition.
count(): count the element inside the collection
forEach(): we can apply foreach operation on collection


ArrayList<String> names = new ArrayList<String>();
		names.add(“Karim”);
		names.add(“Rarim”);
		names.add(“Monir”);
		names.add(“Kumar”);
		names.add(“Habib”);
		int count=0;
		for(int i=0;i<names.size();i++)
		{
		  If(names.get(i).startWith("A"))
		 {
		   count ++;
		 }
		}
		System.out.println(count);

		        ||
		        ||
		        \/
		ArrayList<String> names = new ArrayList<String>();
		names.add(“Karim”);
		names.add(“Rarim”);
		names.add(“Monir”);
		names.add(“Kumar”);
		names.add(“Habib”);
		int count = names.stream().filter(s->s.startWith("A")).count();     //list  convert to stream filter(landa operation)some-function()
		System.out.println(count);
    
    		//apply foreach operation on new collection
		names.stream().filter(s->s.length()==5).forEach(s->System.out.println(s));
		
		//convert to upper case
		names.stream().filter(n->n.startsWith("a")).sorted().map(n->n.toUpperCase()).forEach(n->System.out.println(n));
		
		
		
		
		
		
		
    
    
    
    
    
    
    
