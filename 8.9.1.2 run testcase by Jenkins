
1. How to run testcase local project from Jenkins
2. How to ReInstall Jenkins
3. How to run testcase from GITHUB by Jenkins


//////////How to run testcase local project from Jenkins///////////////////////////////////////

1. go to browser and type "jenkin download"  <---|

	(https://jenkins.io/download)

2. select "Generic java package.war"
3. copy "Generic java package.war" in C:Program file/Jenkins
4. open C:Program file/Jenkins and type cmd to open command prompt

	C:Program file/Jenkins> java -jar jenkins.war --httpport=9090  <-----|

5. open browser and type: localhost:9090   <------|     //it will run jenkins server

6. register and login to jenkins website

7. To run project by using jenkins, you need to create a job

	a. To create new job:
	
		click on "New Item" from menu
		i. Enter an item name: your project name
		ii. select "Freestyle Project"
		iii. click "OK"

		in "General" tab
		i. click on "Advanced" button
		ii. click on "Use custom workspace"
		     Directory:  type your project path
		      (if project in GIT, select git and copy and paste git project path)
		iii. in "Build" click on "Add build Step"
		     click on "invoke top level maven targets"
		iv. Goals: type here maven command
		
			"test -pRegression -Dbrowser=firefox"

	b. To set project as parameterized:
		i. click on "This project is parameterized"
		ii. click on "Add Parameter"
			Choice Parameter:
			Name: browserName
			Choices:chrome
				chromeheadless
				firefox
				edge

		iii. click on "Add Parameter"
			Choice Parameter:
			Name: profile
			Choices:Regression
				Purchase
				ErrorValidation
				CucumberTests

	c. Now change -Build command:

		test -p"$profile" -Dbrowser="$browserName"

	d. click on "Save"  button to save

8. To run testcase project:
	a. in right side menu, click on "Build with parameter"
		i. BrowserName: firefox
		ii. Profile:Regression
		iii. click on "Build"

9. To see output in console:
	 in menu , click on "Console Output"




//////////////////////////////////////////////////////////////////////////////////////////

////////How to ReInstall Jenkins///////////////////////////

Step-1:  	a. Go to browser and type "Jenkins download"   <----|

	b. before you download  "Jenkins version" check java version of your pc.

	c. click on  "Generic Java package(.war)"
 
Step-2: 	Clean previous Jenkin version from your pc (hidden file)
	------------------------------------------------------------------------------

	a. Go to "C:\users\yourname\.jenkins"
	b. copy "jobs" folder and paste it in some other place
	c. remove all files and folder of "jenkins"
	d. copy "Generic java package(.war)" ---> C:\program file\jenkins
	e. go to c:\program file\jenkins  and open command prompt and type
	
	      C:\program file\jenkins> java -jar jenkins.war --httport=9090    <-----|

	f. open browser and type: 
				localhost:9090 

		Administrator password: copy password from command prompt and paste it here
		----> Continue
		----> Install suggested plugins
		----> create First Admin User
		
		Username: admin
		password: abc123
		confirm: abc123
		fullname: your fullname
		E-mail address: youremail@gmail.com

		----> Save and Continue 
		----> Jenkins URL: http:/localhost:9090
		----> Save and Finish
		----> Start using jenkins

	g. in "Jenkins" ---> Manage Jenkins ----> Plugins ----> Available plugins

		search: maven  <----|
		select "Maven integration" ----> install

	h. Stop Jenkins Server (ctrl + c)
	    Start Jenkins server




/////////////How to run testcase from GITHUB by Jenkins/////////////////////////////////////////////

1. Run Jenkins Server
2. Click on "New Item"
	Enter an item name: SeleniumAutomationTest
	----> Maven Project ----> OK
	
	Source code management
	|--- select "GIT"

	Repository
	|--- Repository Url: https//github.com/.....git
	|--- Credientials: Jenkins
	|--- Branch specifier: */main
	|--- Build Triggers: select "Github hook trigger for ..."
	click on "Save" button

	Jenkins Credentials Provider: Jenkins
	(1)
	|--- Kind: Secret text 
	|--- Secret: paste sectret token from (2)
	|--- ID: Github Intregration
	|--- Description: Github Intregration

	(2)
	Go back to GITHUB and login ---> Settings ---> Developer Settings 
	---> Personal access token ---> Tokens (classic) ---> Generate a new token

	Select Scopes (Select all)
	Repo		 Workflow 		Write-package
	delete-packages	admin			admin-public
	admin-repo-hook	gist			user
	notifications	delete-repo		write-discussion
	admin-enterprise	audit-tag			codespace
	copilot		project			admin-gpq key
	admin:ssh-sig

	----> Generate Token
	----> Note: Jenkins-git-access
	----> click on "Generate Token" 

	Copy the token and paste in (1) 	

	(1) click on "Add" button

             ///////Add Maven plugin in Jenkins//////
	in "Jenkins" Deshboard, click on "Manage Jenkins" menu
	----> Tools ----> Add Maven
	uncheck "Install automatically"

	Maven installations
	|---name:3.9.6         //write your maven version number 
	|---maven:C:\program-file\maven\apache-maven-3.9.6    //check your maven version in c
	click on "Save"

           ///////Set Maven command in Jenkins///////
	go to "Dashboard" and select "SeleniumAutomationTest" your created job ---> Configure

	Build
	|---Root POM: pom.xml
	|---Goals and options: test-PRegression
	click on "Save"

         ////////To run project in Jenkins//////////
	go to Jenkins ---> Dashboad ---> Select: Particular JOB ---> "SeleniumAutomationTests"
	----> click on "Build Now"
 	


	
 
