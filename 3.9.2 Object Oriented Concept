//////////////Passing data from child class to parent class///////////////////////////////////////
super(driver)

//////////////AbstractComponent for reuse function////////////////////////////////////////////////

public class AbstractComponent
{
	private WebDriverWait wdw;
	WebDriver driver;
	public AbstractComponent(WebDriver driver)
	{
		this.driver = driver;
	}
	
	//write here all the method that will be reuse in your application
	//wait explicitly
	//wait java wait
	//switching to window
	//switching to frame
	//switching to alert message
	
	public void waitForElementToAppear(By locatorBy)
	{
		wdw = new WebDriverWait(driver, 5);
		wdw.until(ExpectedConditions.visibilityOfElementLocated(locatorBy));
	}
}




////////////Login////////////////////////////////////////////////////////////////

public class LandingPage extends AbstractComponent
{
WebDriver driver;

	public LandingPage(WebDriver driver)
	{
		this.driver = driver;
		PageFactory.initElements(driver, this);
	}
	
	@FindBy(id=”userEmail”)
	WebElement userEmail;
	
	@FindBy(id=”userPassword”)
	WebElement passwordEle;

	@FindBy(id=”login”)
	WebElement sumit;

	public void loginApplication(String email, String password)
	{

	}
}


////////////Product//////////////////////////////////////////////////////////////

package com.abc.testproject;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

public class Product extends AbstractComponent {
	
	List<WebElement> products;

	By products = By.cssSelector(".mb-3");
	By addToCart = By.xpath("//div[@class="add-to-cart"]);
	By toastMessage = By.cssSelector("#toast-container");

	public List<WebElement> getProductList()
	{
		waitForElementToAppear(products);
		return products;
	}
	public  WebElement   getProductByName(String productName)
	{
		WebElement prod = getProductList().stream().filter(product->product.findElement(By.cssSelector("b")).getText().equals(productName)).findFirst().orElse(null);
		return prod;
	}
	public  void addToCartProduct(String productName)
	{
		WebElement  prod = getProductByName(productName);
		prod.findElement(addToCart);
		waitForElementToAppear(toastMessage);
	}


}




